local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/main/source.lua"))()

local Window = Luna:CreateWindow({
    Name = "Sterling Hub",
    Subtitle = nil,
    LogoID = "nil",
    LoadingEnabled = true,
    LoadingTitle = "Sterling Hub",
    LoadingSubtitle = "by DAN",
})

local Tab = Window:CreateTab({
    Name = "Main",
    Icon = "view_in_ar",
    ImageSource = "Material",
    ShowTitle = true
})

Tab:CreateSection("Insta Level Quest")

local instaLevelQuestEnabled = false  -- Variable to store the toggle state

Tab:CreateToggle({
    Name = "Enable Insta Level Quest",
    CurrentValue = instaLevelQuestEnabled,
    Callback = function(State)
        instaLevelQuestEnabled = State
        SaveManager:SaveToggle("InstaLevelQuestEnabled", State)
    end
})

local folder = game.Players.LocalPlayer.ReplicatedTempData  -- Correct path to ReplicatedTempData

local function pressJ()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.J, false, game)
end

local function checkAndFireRemote()
    if instaLevelQuestEnabled then
        -- Check if ReplicatedTempData is empty
        if #folder:GetChildren() == 0 then
local TweenService = game:GetService("TweenService")

local function Tween(Object1, Object2, Speed, Offset, Wait)
    if Object1 and Object2 then
        local Timing = (Object1.Position - Object2.Position).Magnitude / Speed
        local TweenInfo = TweenInfo.new(Timing, Enum.EasingStyle.Linear)
        local TweenSystem = TweenService:Create(Object1, TweenInfo, {CFrame = Object2.CFrame + Offset})
        TweenSystem:Play()
        if Wait then
            TweenSystem.Completed:Wait()
        end
    end
end

local function tweenToPortal()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local missionPortal = workspace.Objects.Portals.Missions

    if character and character.PrimaryPart and missionPortal then
        local offset = Vector3.new(0, 0, 0)  -- Adjust the offset if needed
        local speed = 10000  -- Set the desired speed for the tween
        Tween(character.PrimaryPart, missionPortal, speed, offset, true)
    end
end
tweenToPortal()          
            
            wait(5)
            local ohTable1 = {
                ["type"] = "Band",
                ["set"] = "Shijo Town Set",
                ["rewards"] = {
                    ["essence"] = 25,
                    ["chestMeter"] = 75,
                    ["exp"] = 8000000,
                    ["cash"] = 50000
                },
                ["rewardsText"] = "$50000 | 8000000 EXP | 25 Mission Essence",
                ["difficulty"] = 3,
                ["title"] = "Defeat a band",
                ["amount"] = 1,
                ["level"] = 420,
                ["grade"] = "Non Sorcerer",
                ["subtitle"] = "of 2 curse users"
            }
            game:GetService("ReplicatedStorage").Remotes.Server.Data.ClaimQuest:InvokeServer(ohTable1)
        
        
        end
    end
end

local function TrulyVisible(Frame: Instance)
    local screenGui = Frame:FindFirstAncestorWhichIsA("ScreenGui")
    if not screenGui or not screenGui.Enabled then
        return false
    end

    while Frame and Frame.Parent do
        if Frame:IsA("GuiObject") and not Frame.Visible then
            return false
        end
        Frame = Frame.Parent
    end

    return true
end


local warpHint = game.Players.LocalPlayer.PlayerGui.Main.Frame.BottomMiddle.WarpHint

game:GetService("RunService").Heartbeat:Connect(function()
    if instaLevelQuestEnabled then
        checkAndFireRemote()
    end

    -- Check if WarpHint is visible and trigger pressing "J"
    if TrulyVisible(warpHint) then
        pressJ()
    end
end)



Tab:CreateSection("Instakill")

local instaKillEnabled = false
local range = 50
local tweenToMobEnabled = false
local tweenSpeed = 2
local tweenRange = 50

Tab:CreateSlider({
    Name = "Kill Range",
    Range = {10, 1000},
    Increment = 5,
    CurrentValue = range,
    Callback = function(Value)
        range = Value
    end
})

Tab:CreateToggle({
    Name = "Enable Insta-Kill",
    CurrentValue = false,
    Callback = function(State)
        instaKillEnabled = State
    end
})

Tab:CreateSection("Tweening")

Tab:CreateToggle({
    Name = "Tween to Near Mobs",
    CurrentValue = false,
    Callback = function(State)
        tweenToMobEnabled = State
    end
})

Tab:CreateSlider({
    Name = "Tweening Range",
    Range = {5, 1000},
    Increment = 5,
    CurrentValue = tweenRange,
    Callback = function(Value)
        tweenRange = Value
    end
})

Tab:CreateSlider({
    Name = "Tween Speed",
    Range = {0.5, 1000},
    Increment = 1,
    CurrentValue = tweenSpeed,
    Callback = function(Value)
        tweenSpeed = Value
    end
})

local tweenPosition = "On Top"  -- Initialize variable
Tab:CreateDropdown({
    Name = "Tween Position",
    Options = {"On Top", "Under", "Behind"},
    CurrentOption = tweenPosition,
    Callback = function(Selected)
        tweenPosition = Selected
    end
})

local positionOffset = 1
Tab:CreateSlider({
    Name = "Position Offset",
    Range = {1, 50},
    Increment = 1,
    CurrentValue = positionOffset,
    Callback = function(Value)
        positionOffset = Value
    end
})

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

local Mag = function(Pos1, Pos2)
    return (Pos1.Position - Pos2.Position).Magnitude
end

local Tween = function(Object1, Object2, Speed, Offset, Wait)
    if Object1 and Object2 then
        local Timing = Mag(Object1, Object2) / Speed
        local TweenInfo = TweenInfo.new(Timing, Enum.EasingStyle.Linear)
        local TweenSystem = TweenService:Create(Object1, TweenInfo, {CFrame = CFrame.new(Object2.Position + Offset)})
        TweenSystem:Play()
        if Wait then
            TweenSystem.Completed:Wait()
        end
    end
end

-- Perform Insta-Kill only when the Insta-Kill toggle is enabled
local function performInstaKill()
    if not instaKillEnabled then return end

    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local origin = character.PrimaryPart.Position

    for _, mob in pairs(workspace.Objects.Mobs:GetChildren()) do
        if mob:IsA("Model") and mob.PrimaryPart then
            local distance = (mob.PrimaryPart.Position - origin).Magnitude
            if distance <= range then
                local humanoid = mob:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Health = 0
                end
            end
        end
    end
end

local function NoClip()
    for _, v in next, Player.Character:GetChildren() do
        if v:IsA("BasePart") and v.CanCollide then
            v.CanCollide = false
        end
    end
end

local function performTweenToMobs()
    if not tweenToMobEnabled then return end

    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    NoClip()  -- Enable NoClip during Tweening

    for _, mob in pairs(workspace.Objects.Mobs:GetChildren()) do
        if mob:IsA("Model") and mob.PrimaryPart then
            local distance = (mob.PrimaryPart.Position - character.PrimaryPart.Position).Magnitude
            if distance <= tweenRange then
                local offset = Vector3.new(0, 0, 0)

                -- Set position offset based on selected option
                if tweenPosition == "On Top" then
                    offset = Vector3.new(0, positionOffset, 0)
                elseif tweenPosition == "Under" then
                    offset = Vector3.new(0, -positionOffset, 0)
                elseif tweenPosition == "Behind" then
                    offset = Vector3.new(0, 0, -positionOffset)
                end

                Tween(character.PrimaryPart, mob.PrimaryPart, tweenSpeed, offset, true)
            end
        end
    end
end


game:GetService("RunService").Stepped:Connect(function()
    if instaKillEnabled then
        performInstaKill()  -- Execute Insta-Kill logic when enabled
    end
    if tweenToMobEnabled then
        performTweenToMobs()  -- Execute Tweening logic when enabled
    end
end)

local Misc = Window:CreateTab({
    Name = "Misc",
    Icon = "view_in_ar",
    ImageSource = "Material",
    ShowTitle = true
})

local autopromoteEnabled = false

Misc:CreateToggle({
    Name = "Auto Promote",
    CurrentValue = autopromoteEnabled,
    Callback = function(Value)
        autopromoteEnabled = Value
    end
})

local function performautopromote()
    if autopromoteEnabled then
        local ohString1 = "Clan Head Jujutsu High"
        local ohString2 = "Promote"
        game:GetService("ReplicatedStorage").Remotes.Server.Dialogue.GetResponse:InvokeServer(ohString1, ohString2)
    end
end

game:GetService("RunService").Heartbeat:Connect(function()
    performautopromote()
end)
