local KeyGuardLibrary = loadstring(game:HttpGet("https://cdn.keyguardian.org/library/v1.0.0.lua"))()
local trueData = "5a95fc849a1f4dc983cdf648acd41149"
local falseData = "375afd3973424d1185a291ff31514ced"

KeyGuardLibrary.Set({
    publicToken = "9de5640aa142461480443e9dfa551890",
    privateToken = "aed818a6f7f8460dbe8724d3504548ea",
    trueData = trueData,
    falseData = falseData,
})

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local key = ""

-- Define your pre-set key
local script_key = "" -- Replace this with your desired key

local Window = Fluent:CreateWindow({
    Title = "Key System",
    SubTitle = "SterlingHub",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 340),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    KeySys = Window:AddTab({ Title = "Key System", Icon = "key" }),
}

local Entkey = Tabs.KeySys:AddInput("Input", {
    Title = "Enter Key",
    Description = "Enter Key Here",
    Default = "",
    Placeholder = "Enter keyâ€¦",
    Numeric = false,
    Finished = false,
    Callback = function(Value)
        key = Value
    end
})

local function validateKey()
    local response = KeyGuardLibrary.validateDefaultKey(key)
    if response == trueData then
        print("Key is valid")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Zayn312142/thing/refs/heads/main/crypto"))()
    else
        print("Key is invalid")
    end
end

local Checkkey = Tabs.KeySys:AddButton({
    Title = "Check Key",
    Description = "Enter Key before pressing this button",
    Callback = validateKey
})

local Getkey = Tabs.KeySys:AddButton({
    Title = "Get Key",
    Description = "Get Key here",
    Callback = function()
        setclipboard(KeyGuardLibrary.getLink())
    end
})

-- Automatically enter the key and validate it
if script_key ~= "" then
    key = script_key
    print("Auto-entering key: " .. script_key)
    validateKey()
end

Window:SelectTab(1)
